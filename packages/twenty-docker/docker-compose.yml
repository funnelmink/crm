version: "3.9"
name: funnelmink

services:
  change-vol-ownership:
    image: ubuntu
    platform: linux/amd64
    user: root
    volumes:
      - server-local-data:/tmp/server-local-data
      - docker-data:/tmp/docker-data
    command: >
      bash -c "
      chown -R 1000:1000 /tmp/server-local-data
      && chown -R 1000:1000 /tmp/docker-data"

  server:
    image: jarwarren/funnelmink:${TAG}
    platform: linux/amd64
    volumes:
      - server-local-data:/app/packages/twenty-server/${STORAGE_LOCAL_PATH:-.local-storage}
      - docker-data:/app/docker-data
    ports:
      - "3000:3000"
    environment:
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AUTH_GOOGLE_APIS_CALLBACK_URL: ${AUTH_GOOGLE_APIS_CALLBACK_URL}
      AUTH_GOOGLE_CLIENT_ID: ${AUTH_GOOGLE_CLIENT_ID}
      AUTH_GOOGLE_CALLBACK_URL: ${AUTH_GOOGLE_CALLBACK_URL}
      AUTH_GOOGLE_CLIENT_SECRET: ${AUTH_GOOGLE_CLIENT_SECRET}
      AUTH_GOOGLE_ENABLED: ${AUTH_GOOGLE_ENABLED}
      AUTH_PASSWORD_ENABLED: ${AUTH_PASSWORD_ENABLED}
      BILLING_FREE_TRIAL_DURATION_IN_DAYS: ${BILLING_FREE_TRIAL_DURATION_IN_DAYS}
      BILLING_PLAN_REQUIRED_LINK: ${BILLING_PLAN_REQUIRED_LINK}
      BILLING_STRIPE_API_KEY: ${BILLING_STRIPE_API_KEY}
      BILLING_STRIPE_BASE_PLAN_PRODUCT_ID: ${BILLING_STRIPE_BASE_PLAN_PRODUCT_ID}
      BILLING_STRIPE_WEBHOOK_SECRET: ${BILLING_STRIPE_WEBHOOK_SECRET}
      CACHE_STORAGE_TYPE: ${CACHE_STORAGE_TYPE}
      CALENDAR_PROVIDER_GOOGLE_ENABLED: ${CALENDAR_PROVIDER_GOOGLE_ENABLED}
      EMAIL_DRIVER: ${EMAIL_DRIVER}
      EMAIL_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SYSTEM_ADDRESS: ${EMAIL_SYSTEM_ADDRESS}
      ENABLE_DB_MIGRATIONS: "true"
      EXCEPTION_HANDLER_DRIVER: ${EXCEPTION_HANDLER_DRIVER}
      FILE_TOKEN_SECRET: ${FILE_TOKEN_SECRET}
      FRONT_AUTH_CALLBACK_URL: ${FRONT_AUTH_CALLBACK_URL}
      FRONT_BASE_URL: ${FRONT_BASE_URL:-$SERVER_URL}
      IS_BILLING_ENABLED: ${IS_BILLING_ENABLED}
      IS_SELF_BILLING_ENABLED: ${IS_SELF_BILLING_ENABLED}
      IS_SIGN_UP_DISABLED: ${IS_SIGN_UP_DISABLED}
      LOG_LEVELS: ${LOG_LEVELS}
      LOGGER_DRIVER: ${LOGGER_DRIVER}
      LOGGER_IS_BUFFER_ENABLED: ${LOGGER_IS_BUFFER_ENABLED}
      LOGIN_TOKEN_SECRET: ${LOGIN_TOKEN_SECRET}
      MESSAGE_QUEUE_TYPE: ${MESSAGE_QUEUE_TYPE}
      MESSAGING_PROVIDER_GMAIL_ENABLED: ${MESSAGING_PROVIDER_GMAIL_ENABLED}
      NODE_ENV: ${NODE_ENV}
      PG_DATABASE_URL: postgres://twenty:${POSTGRES_ADMIN_PASSWORD}@${PG_DATABASE_HOST}/default
      PORT: 3000
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      REFRESH_TOKEN_EXPIRES_IN: ${REFRESH_TOKEN_EXPIRES_IN}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_FRONT_DSN: ${SENTRY_FRONT_DSN}
      SENTRY_RELEASE: ${SENTRY_RELEASE}
      SERVER_URL: ${SERVER_URL}
      SIGN_IN_PREFILLED: ${SIGN_IN_PREFILLED}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      STORAGE_S3_NAME: ${STORAGE_S3_NAME}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_TYPE: ${STORAGE_TYPE}
    depends_on:
      change-vol-ownership:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3000/healthz
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  worker:
    image: jarwarren/funnelmink:${TAG}
    platform: linux/amd64
    command: [ "yarn", "worker:prod" ]
    environment:
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AUTH_GOOGLE_APIS_CALLBACK_URL: ${AUTH_GOOGLE_APIS_CALLBACK_URL}
      AUTH_GOOGLE_CLIENT_ID: ${AUTH_GOOGLE_CLIENT_ID}
      AUTH_GOOGLE_CALLBACK_URL: ${AUTH_GOOGLE_CALLBACK_URL}
      AUTH_GOOGLE_CLIENT_SECRET: ${AUTH_GOOGLE_CLIENT_SECRET}
      AUTH_GOOGLE_ENABLED: ${AUTH_GOOGLE_ENABLED}
      AUTH_PASSWORD_ENABLED: ${AUTH_PASSWORD_ENABLED}
      BILLING_FREE_TRIAL_DURATION_IN_DAYS: ${BILLING_FREE_TRIAL_DURATION_IN_DAYS}
      BILLING_PLAN_REQUIRED_LINK: ${BILLING_PLAN_REQUIRED_LINK}
      BILLING_STRIPE_API_KEY: ${BILLING_STRIPE_API_KEY}
      BILLING_STRIPE_BASE_PLAN_PRODUCT_ID: ${BILLING_STRIPE_BASE_PLAN_PRODUCT_ID}
      BILLING_STRIPE_WEBHOOK_SECRET: ${BILLING_STRIPE_WEBHOOK_SECRET}
      CACHE_STORAGE_TYPE: ${CACHE_STORAGE_TYPE}
      CALENDAR_PROVIDER_GOOGLE_ENABLED: ${CALENDAR_PROVIDER_GOOGLE_ENABLED}
      EMAIL_DRIVER: ${EMAIL_DRIVER}
      EMAIL_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SYSTEM_ADDRESS: ${EMAIL_SYSTEM_ADDRESS}
      ENABLE_DB_MIGRATIONS: "false" # it already runs on the server
      EXCEPTION_HANDLER_DRIVER: ${EXCEPTION_HANDLER_DRIVER}
      FILE_TOKEN_SECRET: ${FILE_TOKEN_SECRET}
      FRONT_AUTH_CALLBACK_URL: ${FRONT_AUTH_CALLBACK_URL}
      FRONT_BASE_URL: ${FRONT_BASE_URL:-$SERVER_URL}
      IS_BILLING_ENABLED: ${IS_BILLING_ENABLED}
      IS_SELF_BILLING_ENABLED: ${IS_SELF_BILLING_ENABLED}
      IS_SIGN_UP_DISABLED: ${IS_SIGN_UP_DISABLED}
      LOG_LEVELS: ${LOG_LEVELS}
      LOGGER_DRIVER: ${LOGGER_DRIVER}
      LOGGER_IS_BUFFER_ENABLED: ${LOGGER_IS_BUFFER_ENABLED}
      LOGIN_TOKEN_SECRET: ${LOGIN_TOKEN_SECRET}
      MESSAGE_QUEUE_TYPE: ${MESSAGE_QUEUE_TYPE}
      MESSAGING_PROVIDER_GMAIL_ENABLED: ${MESSAGING_PROVIDER_GMAIL_ENABLED}
      NODE_ENV: ${NODE_ENV}
      PG_DATABASE_URL: postgres://twenty:${POSTGRES_ADMIN_PASSWORD}@${PG_DATABASE_HOST}/default
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      REFRESH_TOKEN_EXPIRES_IN: ${REFRESH_TOKEN_EXPIRES_IN}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_FRONT_DSN: ${SENTRY_FRONT_DSN}
      SENTRY_RELEASE: ${SENTRY_RELEASE}
      SERVER_URL: ${SERVER_URL}
      SIGN_IN_PREFILLED: ${SIGN_IN_PREFILLED}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      STORAGE_S3_NAME: ${STORAGE_S3_NAME}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_TYPE: ${STORAGE_TYPE}
    depends_on:
      db:
        condition: service_healthy
      server:
        condition: service_healthy
    restart: always

  db:
    image: twentycrm/twenty-postgres:${TAG}
    platform: linux/amd64
    volumes:
      - db-data:/bitnami/postgresql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
    healthcheck:
      test: pg_isready -U twenty -d default
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - /var/opt/pgbackups:/backups
    depends_on:
      - db
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: default
      POSTGRES_USER: twenty
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      SCHEDULE: "0 0 * * *"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      HEALTHCHECK_PORT: 8080

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped


volumes:
  docker-data:
  db-data:
  redis-data:
  server-local-data:
